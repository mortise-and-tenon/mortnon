<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.mt</groupId>
    <artifactId>mortnon</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1</version>


    <name>mortnon</name>
    <url>https://gitee.com/mortise-and-tenon/mortnon</url>
    <description>卯榫管理系统</description>

    <properties>
        <java.version>1.8</java.version>
        <mortnon.version>0.0.1</mortnon.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <springboot.version>2.4.4</springboot.version>
        <springdoc.version>1.5.0</springdoc.version>
        <ini4j.version>0.5.4</ini4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 通用工具 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-utils</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <!-- web层 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-web</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <!-- 启动 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-boot</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <!-- 领域服务层 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-service</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <!-- 业务层 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-biz</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <!-- 数据接入层 -->
            <dependency>
                <groupId>org.mt</groupId>
                <artifactId>mortnon-dal</artifactId>
                <version>${mortnon.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- ini格式处理 -->
            <dependency>
                <groupId>org.ini4j</groupId>
                <artifactId>ini4j</artifactId>
                <version>${ini4j.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>mortnon-boot</module>
        <module>mortnon-utils</module>
        <module>mortnon-web</module>
        <module>mortnon-service</module>
        <module>mortnon-biz</module>
        <module>mortnon-dal</module>
    </modules>
<!--    <packaging>pom</packaging>-->


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.shalousun</groupId>
                <artifactId>smart-doc-maven-plugin</artifactId>
                <version>2.1.3</version>
                <configuration>
                    <!--指定生成文档的使用的配置文件,配置文件放在自己的项目中-->
                    <configFile>./src/main/resources/smart-doc.json</configFile>
                    <!--指定项目名称-->
                    <projectName>mortnon</projectName>
                    <!--smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉-->
                    <excludes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <!--1.0.7版本开始你还可以用正则匹配排除,如：poi.* -->
                        <exclude>com.alibaba:fastjson</exclude>
                    </excludes>
                    <!--自1.0.8版本开始，插件提供includes支持-->
                    <!--smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件-->
                    <includes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <include>com.alibaba:fastjson</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <!--如果不需要在执行编译时启动smart-doc，则将phase注释掉-->
                        <phase>compile</phase>
                        <goals>
                            <!--smart-doc提供了html、openapi、markdown等goal，可按需配置-->
                            <goal>html</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
